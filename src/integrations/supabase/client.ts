
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://drzylxvkadmjwocfivgy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRyenlseHZrYWRtandvY2Zpdmd5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM5MTI1MzQsImV4cCI6MjA1OTQ4ODUzNH0.9x5JEzRbNiKitjhDRqkKqapw5ChpOb3m7WJPzNRi_-c";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storageKey: 'chatty-fit-pal-auth',
    debug: true, // Enable debug mode to see auth-related logs
  },
});

// Helper function to check if user is authenticated
export const isAuthenticated = async (): Promise<boolean> => {
  try {
    const { data, error } = await supabase.auth.getSession();
    if (error) {
      console.error("Auth check error:", error);
      return false;
    }
    const isAuth = !!data.session?.user;
    console.log("Authentication check:", isAuth ? "User is authenticated" : "User is not authenticated");
    return isAuth;
  } catch (e) {
    console.error("Exception during auth check:", e);
    return false;
  }
};

// Helper function to get current user ID
export const getCurrentUserId = async (): Promise<string | undefined> => {
  try {
    const { data } = await supabase.auth.getSession();
    const userId = data.session?.user?.id;
    if (userId) {
      console.log("Current user ID:", userId);
    } else {
      console.log("No user ID available - user not logged in");
    }
    return userId;
  } catch (e) {
    console.error("Exception getting user ID:", e);
    return undefined;
  }
};

// Add auth state change listener for debugging
supabase.auth.onAuthStateChange((event, session) => {
  console.log(`Auth state changed: ${event}`, session ? "User session available" : "No user session");
});
